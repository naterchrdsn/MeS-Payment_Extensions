<?php
/**
 * Merchant e-Solutions Magento Plugin.
 * v1.1.0 - March 10th, 2011
 * 
 * Copyright (c) 2010 Merchant e-Solutions
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *    * Neither the name of Merchant e-Solutions nor the
 *      names of its contributors may be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
?>
<?php 
$_code = $this->getMethodCode();
$_config = Mage::getStoreConfig('payment/gateway');
?>

<ul class="form-list" id="payment_form_<?php echo $_code ?>" style="display:none;">
    <li>
        <div id="mes_err" class="validation-failed" style="display: none; padding: 10px;">
			err div
        </div>
    </li>
    <li>
        <label for="<?php echo $_code ?>_cc_type" class="required"><em>*</em><?php echo $this->__('Credit Card Type') ?></label>
        <div class="input-box">
            <select id="<?php echo $_code ?>_cc_type" name="payment[cc_type]" class="required-entry">
                <option value=""><?php echo $this->__('--Please Select--')?></option>
            <?php $_ccType = $this->getInfoData('cc_type') ?>
            <?php foreach ($this->getCcAvailableTypes() as $_typeCode => $_typeName): ?>
                <option value="<?php echo $_typeCode ?>"<?php if($_typeCode==$_ccType): ?> selected="selected"<?php endif ?>><?php echo $_typeName ?></option>
            <?php endforeach ?>
            </select>
        </div>
    </li>
    <li>
        <label for="<?php echo $_code ?>_cc_number" class="required"><em>*</em><?php echo $this->__('Credit Card Number') ?></label>
        <div class="input-box">
            <input type="text" id="<?php echo $_code ?>_cc_number" name="payment[cc_number]" title="<?php echo $this->__('Credit Card Number') ?>" class="input-text required-entry" value="" />
        </div>
    </li>
    <li id="<?php echo $_code ?>_cc_type_exp_div">
        <label for="<?php echo $_code ?>_expiration" class="required"><em>*</em><?php echo $this->__('Expiration Date') ?></label>
        <div class="input-box">
            <div class="v-fix">
                <select id="<?php echo $_code ?>_expiration" name="payment[cc_exp_month]" class="month validate-cc-exp required-entry">
                <?php $_ccExpMonth = $this->getInfoData('cc_exp_month') ?>
                <?php foreach ($this->getCcMonths() as $k=>$v): ?>
                    <option value="<?php echo $k?$k:'' ?>"<?php if($k==$_ccExpMonth): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                <?php endforeach ?>
                </select>
            </div>
            <div class="v-fix">
                <?php $_ccExpYear = $this->getInfoData('cc_exp_year') ?>
                <select id="<?php echo $_code ?>_expiration_yr" name="payment[cc_exp_year]" class="year required-entry">
                <?php foreach ($this->getCcYears() as $k=>$v): ?>
                    <option value="<?php echo $k?$k:'' ?>"<?php if($k==$_ccExpYear): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                <?php endforeach ?>
                </select>
            </div>
        </div>
    </li>
    <?php echo $this->getChildHtml() ?>
    <?php if($this->hasVerification()): ?>
    <li id="<?php echo $_code ?>_cc_type_cvv_div">
        <label for="<?php echo $_code ?>_cc_cid" class="required"><em>*</em><?php echo $this->__('Card Verification Number') ?></label>
        <div class="input-box">
            <div class="v-fix">
                <input type="text" title="<?php echo $this->__('Card Verification Number') ?>" class="input-text cvv required-entry validate-cc-cvn" id="<?php echo $_code ?>_cc_cid" name="payment[cc_cid]" value="" />
            </div>
            <a href="#" class="cvv-what-is-this"><?php echo $this->__('What is this?') ?></a>
        </div>
    </li>
    <?php endif; ?>

	<?php if ($this->hasSsCardType()): ?>
    <li id="<?php echo $_code ?>_cc_type_ss_div">
        <ul class="inner-form">
            <li class="form-alt"><label for="<?php echo $_code ?>_cc_issue" class="required"><em>*</em><?php echo $this->__('Switch/Solo/Maestro Only') ?></label></li>
            <li>
                <label for="<?php echo $_code ?>_cc_issue"><?php echo $this->__('Issue Number') ?>:</label>
                <span class="input-box">
                    <input type="text" title="<?php echo $this->__('Issue Number') ?>" class="input-text validate-cc-ukss cvv" id="<?php echo $_code ?>_cc_issue" name="payment[cc_ss_issue]" value="" />
                </span>
            </li>

            <li>
                <label for="<?php echo $_code ?>_start_month"><?php echo $this->__('Start Date') ?>:</label>
                <div class="input-box">
                    <div class="v-fix">
                        <select id="<?php echo $_code ?>_start_month" name="payment[cc_ss_start_month]" class="validate-cc-ukss month">
                        <?php foreach ($this->getCcMonths() as $k=>$v): ?>
                            <option value="<?php echo $k?$k:'' ?>"<?php if($k==$this->getInfoData('cc_ss_start_month')): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                        <?php endforeach ?>
                        </select>
                    </div>
                    <div class="v-fix">
                        <select id="<?php echo $_code ?>_start_year" name="payment[cc_ss_start_year]" class="validate-cc-ukss year">
                        <?php foreach ($this->getSsStartYears() as $k=>$v): ?>
                            <option value="<?php echo $k?$k:'' ?>"<?php if($k==$this->getInfoData('cc_ss_start_year')): ?> selected="selected"<?php endif ?>><?php echo $v ?></option>
                        <?php endforeach ?>
                        </select>
                    </div>
                </div>
            </li>
            <li class="adv-container">&nbsp;</li>
        </ul>

        <script type="text/javascript">
        //<![CDATA[
        var SSChecked<?php echo $_code ?> = function() {
            var elm = $('<?php echo $_code ?>_cc_type');
            if (['SS','SM','SO'].indexOf(elm.value) != -1) {
                $('<?php echo $_code ?>_cc_type_ss_div').show();
            } else {
                $('<?php echo $_code ?>_cc_type_ss_div').hide();
            }
        };

        Event.observe($('<?php echo $_code ?>_cc_type'), 'change', SSChecked<?php echo $_code ?>);
        SSChecked<?php echo $_code ?>();
        //]]>
        </script>
    </li>
    <?php endif; ?>
    
	<li>
        <div id="BCLDGuidDiv" style="border: 0px; width: 0px; height: 0px;"></div>
		<div id="BCLDflashplayer" style="border: 0px; width: 0px; height: 0px;"></div>
		<input type="hidden" id="<?php echo $_code ?>_cc_fingerprint" name="payment[cc_fingerprint]" value="" />
		<?php
		if($_config['use_tokenization']) { ?>
			<input type="hidden" id="<?php echo $_code ?>_cc_token" name="payment[cc_token]" value="" />
		<?php } ?>
		
    </li>
    
</ul>

<script type="text/javascript">
	//<![CDATA[
	
<?php
# When using tokenization, overwrite payment.save with tokenization. Otherwise just validate and process.
if($_config['use_tokenization']) {
?>
	// Override payment.save
	payment.save = function($super) {
		if(typeof BCLD == 'undefined') {
			new Effect.Appear($('mes_err'), {duration:1, from:0.0, to:1.0});
			$('mes_err').show().update("Tokenization Library failed to load.");
		}
		else {
			$('mes_err').hide().update("");
			var validator = new Validation(payment.form);
			if (payment.validate() && validator.validate()) {
				// Mes JS may not have loaded
				if(Mes != 'undefined') {
					var mes_cc = document.getElementById('gateway_cc_number').value;
					var mes_month = document.getElementById('gateway_expiration').value;
					if(mes_month.length == 1) mes_month = '0' + mes_month; // Pad month to 2-digit
					var mes_year = document.getElementById('gateway_expiration_yr').value.substr(2,2); // Cut year to last 2 digits
					Mes.tokenize(mes_cc, mes_month+mes_year, mesTokenResponse);
				}
				else
					mesProcess();
			}
		}
	};
<?php
}
# No tokenization -> Validate & process
else {
	?>
	// Override payment.save
	payment.save = function($super) {
		var validator = new Validation(payment.form);
        if (payment.validate() && validator.validate())
			mesProcess();
	};
<?php
}
?>
	function dumpResults(resultArray) {
		var out = '';
        for (var i in resultArray) {
            out += i + ": " + resultArray[i] + "\n";
        }
        alert(out);
	}
	
	function mesTokenResponse(result) {
		//dumpResults(result);
		
		switch(result['code']) {
		case 0:
			document.getElementById('gateway_cc_token').value = result['token'];
			mesProcess();
			break;
		case 1:
			new Effect.Appear($('mes_err'), {duration:1, from:0.0, to:1.0});
			$('mes_err').show().update("Your browser is not compatible with the payment security enforced by this website.<br />Please upgrade or use the latest version of any modern web browser.");
			break;
		case 2:
			var cc = document.getElementById('<?php echo $_code ?>_cc_number');
			
			if(cc.value.match(/^\*{11,12}\d{4}/) == null) {
				$$('#gateway_cc_number').invoke('removeClassName', 'validation-passed').invoke('addClassName', 'validation-failed');
				new Effect.Appear($('mes_err'), {duration:1, from:0.0, to:1.0});
				$('mes_err').show().update("Invalid Credit Card Number");
			}
			else
				mesProcess();
			break;
		case 3:
			// Somehow, the exp date is invalid. Should not happen.
			$$('#gateway_cc_number').invoke('removeClassName', 'validation-passed').invoke('addClassName', 'validation-failed');
			new Effect.Appear($('mes_err'), {duration:1, from:0.0, to:1.0});
			$('mes_err').show().update("Invalid expiry date or expired card");
			break;
		case 4:	// Payment Gateway Error
			new Effect.Appear($('mes_err'), {duration:1, from:0.0, to:1.0});
			$('mes_err').show().update("There was an error processing the request with the gateway: "+result['gateway_text']);
			break;
		case 5: // HTTP error (IE 8,9 only)
		case 6: // Transmission Error
			new Effect.Appear($('mes_err'), {duration:1, from:0.0, to:1.0});
			$('mes_err').show().update("There was an error processing the request. Please try again, or contact the administrator.");
			break;
		case 7: // Cross Scheme (non SSL to SSL) Error (IE 8,9 only)
			new Effect.Appear($('mes_err'), {duration:1, from:0.0, to:1.0});
			$('mes_err').show().update("Site must be secured with SSL to proceed. Please contact the administrator.");
			break;
		}
	}

	function mesProcess() {
<?php if($_config['use_tokenization']) { ?>
		// Truncate card number before proceeding
		var cc = document.getElementById('<?php echo $_code ?>_cc_number');
		cc.value = truncate(cc.value);
<?php } ?>
		
        if (checkout.loadWaiting != false) return;
        checkout.setLoadWaiting('payment');
        var request = new Ajax.Request(
            payment.saveUrl,
            {
                method:'post',
                onComplete: payment.onComplete,
                onSuccess: payment.onSave,
                onFailure: checkout.ajaxFailure.bind(checkout),
                parameters: Form.serialize(payment.form)
            }
        );
	}
	
	function truncate(number) {
		last = number.substring(number.length-4, number.length);
		number = number.replace(new RegExp(".", "ig"),"*");
		return number.substring(0, number.length-4) + last;
	}
	
	if(typeof BCLD != 'undefined') // BlueCava may not have loaded.
		BCLD.getSnapshot(fpOkay, fpError);
	
    function fpError(errorMessage) {
    	// ... bypass fingerprint onerror
    }
    
    function fpOkay(fp, warningMessage) {
    	var fingerprintData = document.getElementById('<?php echo $_code ?>_cc_fingerprint');
    	fingerprintData.value = fp;
    }
//]]>
</script>


